* {
    margin: 0;
    padding: 0;
        /* общие стили для убирания отступов */
}


@font-face {
        /* чтобы подключить шрифт надо вписать font-family и прописать шрифт */
    font-family: 'Gilroy';
        /* надо указать и путь */
        /* и свойство url .*/
    src: url("../fonts/Gilroy-Semibold.ttf");
        /* По сути, мы находимся сейчас в директории styles и нам надо выйти из нее посредством ".." и указать новый путь до шрифтов */
        /* так и называем font-family */
}

@font-face {
    font-family: Merriweather;
    src: url("../fonts/Merriweather-Black.ttf");
}

body {
        /* выходим из режима разработки в фигме и переходим в самый первый блок → находим наполнение и его код цвета */
    background-color: #191411;
        /* указываем что на всей странице мы будем по умолчанию использовать шрифт font */
    font-family: 'Gilroy', sans-serif;
        /* sans-serif сделает более безопасным использование шрифта.
        Это значит, что если произойдет какая-либо проблема при использовании шрифта,
        то будет использован общий тип шрифта sans-serif */
    color: white; /* делаем белый цвет элементов и шрифта */
}

        /* контейнер (div с лого и навигацией) есть не только в хедере, но и по всей странице,
        поэтому используем просто класс container чтобы задать стиль всем контейнерам */
.container {
    max-width: 1200px;
    margin: 0 auto; /* блок будет располагаться по центру */
}

    /* зададим стили для кнопок */
.button {
    padding: 19px;
    border-radius: 8px;
    background: linear-gradient(96deg, #DA8023 0%, #E2B438 100%);
    cursor: pointer;
    width: 260px;
    height: 62px;
    box-sizing: border-box;
    /* для того чтобы было удобно управлять свойствами кнопки зададим flex */
    display: flex;
    /* выровняем весь контент по центру */
    justify-content: center;
    align-items: center;
    /* у кнопки появляются стандартные рамки браузера, которые нам надо убрать */
    border: 0;
    /* убираем стандартные свойства фокуса браузера */
    outline: none;
    color: #191411;
    font-size: 18px;
}

/* сделаем чтобы при наведении на кнопку менялся цвет фона. hover - при наведении */
.button:hover {
    background: linear-gradient(96deg, #ac6115 0%, #9e7a19 100%);
}

.common-title {
    text-align: center;
    font-family: 'Merriweather', sans-serif;
    font-size: 64px;
    line-height: 80px;
    letter-spacing: 1.92px;
    text-transform: uppercase;
}

        /* тут мы отделяем все общие стили от стилей по блокам.
        все общие сверху, стили по блокам - ниже */

.header {
        /* задаем отступы сверху и снизу.
        смотрим какие отступы в фигме .
        эти оступы работают для нашего контейнера с лого */
    padding: 40px 0;
}

        /* нам нужно применить стили для конкретно контейнера хедера */
.header .container {
    display: flex;
    align-items: center     /* для того чтобы по вертикали наши   элементы располагались в одну строку ровно */
}

.logo img {
        /* для этого элемента нам не нужно задавать стили. нам нужно задать стили для картинки внутри.
        чтобы это сделать мы прописываем после .logo img */
    vertical-align: bottom; /* нужно для того, чтобы убрать отступ снизу у картинки,  который добавляет браузер */
}

.menu {
        /* нужно задать отступ слева от картинки до пунктов меню.
        Для этого наводим на пункт меню и видим расстояние */
    margin-left: 191px;
}

.menu-list {
        /* нам нужно сделать, чтобы маркеры списка • на странице не отображались
        для этого используем list-style: none */
    list-style: none;
        /* чтобы эл. располагались не в столбец а в строку, мы используем display: flex */
    display: flex;
}

.menu-item {
        /* делаем отступы между ссылками. смотрим отсупы в фигме */
    margin-right: 88px;
}

        /* стиль для ссылки. у нее нет своего класса */
.menu-item a {
    color: #FFFFFF;
    font-size: 18px;
    text-decoration: none;
    cursor: pointer;
        /* при наведении появляется кликающая рука */
}

        /* сделаем, чтобы при наведении было подчеркивание. для этого пишем hover.
        таким образом будут срабатывать стили при наведении на этот блок */
.menu-item a:hover {
    border-bottom: 2px solid white;
}

.main {
    background-image: url("../images/main_bg.png");
    /* для правильной позиции прописываем бэк позишен. по вертикали сверху по горизонтали по центру */
    background-position: top center;
    /* чтобы страница не скроллилась вправо и контент обрезался если он не влазит, впишем следующее */
    overflow: hidden;
}

.currency {
    padding: 11px;
    border-radius: 5px;
    border: 1px solid white;
        /* border-box - границы будут входить в общий размер */
    box-sizing: border-box;
    width: 45px;
    height: 45px;
        /* после того как задали границы. нам надо выровнять текст */
    text-align: center;
    cursor:pointer;
        /* нам нужно чтобы этот элемент располагался в конце контейнера. для этого задаем margin-left: auto */
    margin-left: auto;
    font-size: 18px;
        /* чтобы текст внутри нельзя было выделять мы используем user-select */
    user-select: none;
}

.main-content {
    /* нам нужно сделать отступы сверху и снизу */
    padding-top: 103px;
    padding-bottom: 199px;
}
.main-content .container {
    /* свойство для позиционирования бургера. он будет смещаться относительно блока main-content */
    position: relative;
}

    /* нам нужно сделать ограничить блок по ширине , чтобы текст переносился на новые строки и не расползался по всей странице    */
.main-info {
    /* фиксированная и адаптированная ширина. блок с таким свойством при уменьшении экрана тоже уменьшается */
    max-width: 608px;
}

.main-smail-info {
    background: #D3320F;
    border-radius: 100px;
    padding: 12px 16px;
    /* чтобы элемент располагался корректно делаем его блочно-строчным */
    display: inline-block;
    font-size: 18px;
}

.main-title {
    /* заключаем шрифт в кавычки и после прописываем санс сериф, чтобы написание шрифта было правильным */
    font-family: 'Merriweather', sans-serif;
    font-size: 120px;
    line-height: 156px;
    letter-spacing: 3.60px;
    text-transform: uppercase;
    margin-bottom: 56px;
}

.main-text {
    font-size: 24px;
    /* сделаем междстрочный интервал чуть больше, чтобы текст располагался как в макете */
    line-height: 29px;
    margin-bottom: 56px;
}

.main-image {
    /* сделаем картинку абсолютно позиционированной, чтобы она висела в воздухе */
    position: absolute;
    /* задатим смещение сверху */
    top: -123px;
    /* сделаем смещение слева c помощью calc.
     calc() делает простым позиционирование объекта с помощью отступа */
    left: calc(100% - 991px);
    /* чтобы картинка правильно позиционировалась нам надо добавить еще одно свойство, но только в main-content
     .main-content .container
     */
}

.why {
    background-image: url("../images/whybg.png");
    /* нужно чтобы картинка правильно размещалась. по вертикали мы ее выровняем сверху , по горизонтали - по центру */
    background-position: top center;
    /* изменим размер картинки, чтобы она была такой какая есть на самом деле. чтобы браузер не изменял размер картинки */
    background-size: initial;
    /* делаем отступ снизу для блока */
    padding-bottom: 180px;
}



.why-items {
    margin-top: 60px;
    /* сделаем чтобы элементы могли быть расположены в строку и чтобы мы могли удобно их позиционировать */
    display: grid;
    /* между ними отступ в 100 */
    gap: 100px;
    /* по первому квадрату в схеме они 312x287 (ширина и высота) */
    /* создаем свойство grid, где говорим, что колонки будут повторяться 3 раза и что каждая из них 312 пикселей */
    grid-template-columns: repeat(3, 312px);
    /* чтобы выровнять весь контент по центру мы используем justify-content: */
    justify-content: center;
}

.why-item {
    text-align: center;
}

.why-item-title {
    font-size: 24px;
    /* нужно чтобы высота строки была чуть больше чем отступ текста */
    padding: 24px 0;
}

.why-item-text {
    font-size: 16px;
    line-height: 140%;
}

/* делаем стили для секции с бургерами */
.products {
    background-image: url("../images/burgers_bg.png");
    background-position: top center;
    background-size: 1400px;
    padding-bottom: 180px;
}

.products-items {
    /* для того чтобы товары располагались сеткой нам нужен grid . это специальная сетка которая поможет быстро и удобно управлять элементами*/
    display: grid;
    grid-template-columns: repeat(3, 384px);
    gap: 24px;
    margin-top: 60px;
}

.products-item {
    padding: 30px;
    background: #211A16;
    border-radius: 16px;
    border: 1px solid #353535;
}

.products-item-image {
    height: 250px;

}

/* нужно внутри задать стили для картинки.
эта картинка не имеет никаких классов поэтому мы можем привязаться к классу но через пробел добавить img
тогда стили применятся для картинки */

.products-item-image img {
    /* зададим максимальную ширину так как картинки имеют свойство расширяться даже если становятся больше чем размеры блока*/
    max-width: 100%;
}

.products-item-title {
    font-size: 24px;
    line-height: 29px;
    margin: 24px 0;
}

.products-item-text {
    font-size: 16px;
    line-height: 140%;
    margin-bottom: 24px;
}


.products-item-extra {
    display: flex;
    justify-content: space-between;
}



.products-item-price {
    font-size: 32px;
    line-height: 39px;
    margin-bottom: 8px;
}

.products-item-weight {
    font-size: 16px;
    line-height: 18px;
    color: #757575;
}

/* стиль применится если есть два этих класса  */
.button.product-button {
    display: flex;
    justify-content: center;
    width: 182px;
    height: 62px;
}

/* чтобы задать отступ между текстом "заказать" и иконкой корзины есть отступ
 чтобы его задать мы используем прежний класс, добавим в него span через пробел и напишем псевдоселектор first child, что значит, что этот блок стилей применится к первому span внутри*/
.button.product-button span:first-child {
    margin-right: 10px;
}


/* первое что мы делаем это задаем фоновую картинку
 бургер в коробке поместим в html
 */
.order {
    background-image: url("../images/order_bg.png");
    background-position: top center;
    background-repeat: no-repeat;
    padding-bottom: 180px;
    overflow: hidden;
}

.order .container {
    position: relative;
}

/* класс для бургера в коробке */
.order-image {
    /* зададим абсолютное позиционирование, чтобы эта картинка вышла из сетки элементов и висела сверху и мы сможем позиционировать ее как угодно */
    position: absolute;
    /* top 0 - она будет располагаться сверху без смещения */
    top: 0;
    /* справа - расчет заранее */
    right: calc(100% - 764px);
    /* чтобы картинка не мешала заполнению формы мы ее разместим на заднем плане через z-index
    -1 значит что меньше нуля разместим на задний план
    */
    z-index: -1;
    /* чтобы картинка смещалась не относительно всей страницы,
    а относительно нашего контейнера в блоке order  сделаем сверху селектор, который будет применяться конкретно к контейнеру в котором находится блок ордер*/
}

.order-form {
    border-radius: 16px;
    border: 1px solid #353535;
    background: #211A16;
    margin-top: 60px;
    width: 426px;
    padding: 60px 40px;
    box-sizing: border-box;
    margin-left: 674px;
}

.order-form-text {
    font-size: 24px;
    line-height: 29px;
    text-align: center;
}

.order-form-inputs {
    display: flex;
    flex-direction: column; /* все элементы располагаются в одну колонку */
    margin-top: 40px;
}


.order-form-input {
    width: 344px;
    height: 62px;
    /*
    нам нужно задать фон для блока div, а внутрь размещаем импут
    рамка это фон
    используем градиент . 95.61deg это направление градиента. сначала прописываем один после 0% прописываем второй цвет.
     */
    background: linear-gradient(95.61deg,#DA8023 0%,#E2B438 100%);
    border-radius: 8px;
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    /*
    импут будет строго мо центру
     */
}

/* один стиль для блока (выше), второй для импута внутри */
.order-form-input input {
    padding: 16px 10px;
    background: #211A16;
    border-radius: 8px;
    color: white; /* будет белый текст когда мы его будем вводить внутрь */
    height: 60px;
    width: 342px;
    box-sizing: border-box;
    outline: none;
    border: 1px solid transparent; /* transparent - прозрачный */
}

.order-form-inputs .button {
    /*
    нужно сделать, чтобы кнопка была таких же размеров, как и весь блок.
     */
    width: 344px;
    height: 62px;
}

.footer {
    padding: 60px 0; /* слева и справа ноль так как за это отвечает контейнер */
}

/*
у нас есть два элемента которые должны разнестись по разным сторонам и это мы сделаем благодаря контейнеру, который находится в футере

 */
.footer .container {
    display: flex; /* задаем флекс чтобы удобно управлять контентом */
    align-items: center; /* задаем центр, чтобы по вертикали были выровнены */
    justify-content: space-between; /* чтобы разнеслись по разные стороны этого блока */
}

.rights {
    font-size: 16px;
    line-height: 20px;
}